{"version":3,"sources":["components/ShiftTextComponent.js","theme/themes.js","theme/index.js","components/AppHeader.js","utils/urlUtil.js","containers/HomePage.js","redux/ActionTypes.js","redux/actions/SettingsAcrion.js","utils/colorUtil.js","components/PerferenceGroup.js","components/PreferenceItem.js","containers/tabs/LanguageTab.js","containers/tabs/SloganTab.js","containers/tabs/AppearanceTab.js","containers/tabs/ApplicationTab.js","containers/tabs/AboutTab.js","containers/SettingsPage.js","locale/zh-Hans.js","locale/zh-Hant.js","locale/en-US.js","locale/index.js","App.js","utils/registerServiceWorker.js","redux/reducers/SettingsReducer.js","redux/reducers/index.js","redux/configureStore.js","index.js"],"names":["ShiftTextComponent","index","state","displayText","updateIndex","slogan","_this","props","undefined","setState","length","setTimeout","interval","this","timer","setInterval","clearInterval","split","display","i","push","react_default","a","createElement","key","idx","react_markdown_default","renderers","paragraph","allowedTypes","source","style","userSelect","textAlign","fontSize","color","fontColor","react_addons_css_transition_group_default","transitionLeaveTimeout","transitionEnterTimeout","transitionName","Component","defaultProps","White","primary","primaryDark","background","accent","textPrimary","textSecondary","Light","Dark","Black","ChromeDark","getTheme","theme","toLowerCase","Container","styled","div","_templateObject","Title","h1","_templateObject2","AppHeader","_this$props","title","leftExtra","rightExtra","Object","objectSpread","width","marginRight","flex","marginLeft","getQueryParamsFromUrl","query","URLSearchParams","window","location","search","get","Root","HomePage_templateObject","HomePage","idle","getSlogan","trim","messages","defineMessages","defaultSlogan","id","intl","formatMessage","filter","item","map","mouseCountdown","handleMouseMove","clearTimeout","palette","settingsIcon","react_router_dom","to","index_esm","cursor","alignItems","justifyContent","onMouseMove","AppHeader_AppHeader","position","top","boxSizing","height","components_ShiftTextComponent","connect","replace","language","settings","injectIntl","UPDATE_LANGUAGE","UPDATE_THEME","UPDATE_SLOGAN","UPDATE_INTERVAL","UPDATE_FONT_SIZE","UPDATE_FONT_ALIGN","updateLanguage","type","updateTheme","updateSlogan","updateInterval","updateFontSize","updateFontAlign","fontAlign","hexToRgbA","hex","alpha","c","test","substring","join","Error","PerferenceGroup_templateObject","PreferenceGroup","titleId","children","index_es","text","PerferenceGroup_Title","PreferenceItem_templateObject","PreferenceItem","actionView","itemView","PreferenceItem_Container","borderColor","LanguageTab","onSelect","e","target","value","scheme","PerferenceGroup_PreferenceGroup","PreferenceItem_PreferenceItem","className","backgroundColor","onChange","SloganTab","showSyntax","saveSuccess","setSlogan","updateTextareaSize","textarea","refs","autosize","onTextChange","onIntervalChange","s","k","onSave","alert","onReset","validateNumberInput","theEvent","event","clipboardData","getData","keyCode","which","String","fromCharCode","returnValue","preventDefault","_this2","requestAnimationFrame","customTab","ref","onKeyUp","spellCheck","paddingRight","paddingLeft","onClick","verticalAlign","flexDirection","iconName","onKeyPress","minHeight","ThemeBlockContainer","AppearanceTab_templateObject","ThemeBlockSelection","AppearanceTab_templateObject2","AppearanceTab","onThemeSelect","ThemeBlock","_ref","ApplicationTab","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","deferredPrompt","onAddPwa","prompt","userChoice","then","choiceResult","outcome","console","log","addEventListener","AboutTab","about","role","aria-label","packageJson","version","href","fontWeight","Mobile","react_responsive_default","assign","maxWidth","Tablet","minWidth","Default","SettingsPage_templateObject","Sider","SettingsPage_templateObject2","NavItem","_templateObject3","ContentContainer","_templateObject4","SettingsPage","showMenu","match","meta","name","Helmet","content","react_router","exact","path","concat","url","component","mapStateToProps","mapDispatchToProps","render","links","closeIcon","moreIcon","SettingsPage_Root","SettingsPage_Default","SettingsPage_Tablet","SettingsPage_Mobile","link","activeClassName","activeStyle","dispatch","zh_Hans","appName","slogan.default","action.ok","action.save","action.save.success","action.cancel","action.reset","settings.application","settings.appearance","settings.language","settings.language.default","settings.about","settings.slogan","settings.slogan.syntax","settings.slogan.syntax.summary","settings.slogan.custom","settings.slogan.interval","settings.about.release_note","settings.appearance.theme","settings.appearance.theme.white","settings.appearance.theme.black","settings.appearance.theme.light","settings.appearance.theme.dark","settings.appearance.theme.chrome-dark","zh_Hant","en_US","mergeLanguage","output","_len","arguments","languages","Array","_key","_i","_languages","lang","getLocale","result","navigator","userLanguage","toLocaleLowerCase","zhHans","zhHant","enUS","addLocaleData","toConsumableArray","en","zh","App","charSet","route","locale","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","initialState","rootReducer","combineReducers","action","types","middlewares","logger","createStoreWithMiddleware","applyMiddleware","apply","createStore","enhancer","__REDUX_DEVTOOLS_EXTENSION__","actionCreators","persistConfig","storage","persistedReducer","persistReducer","defaultState","store","ReactDOM","es","integration_react","persistor","persistStore","src_App","document","getElementById","URL","process","origin","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3055db52.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport ReactMarkdown from 'react-markdown'\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\n\nclass ShiftTextComponent extends Component {\n  static propTypes = {\n    fontSize: PropTypes.number,\n    fontColor: PropTypes.string,\n    textAlign: PropTypes.oneOf(['center', 'left', 'right']),\n    slogan: PropTypes.array,\n    interval: PropTypes.number,\n  }\n\n  static defaultProps = {\n    fontSize: 64,\n    fontColor: '#000',\n    textAlign: 'left',\n    slogan: [],\n    interval: 3,\n  }\n\n  index = 0\n\n  state = {\n    displayText: \"\"\n  }\n\n  updateIndex = () => {\n    const slogan = this.props.slogan\n    if (slogan === undefined) {\n      this.setState({\n        displayText: \"\"\n      })\n    } else {\n      if (this.index >= 2 * slogan.length) {\n        this.index = 0\n      }\n      if (this.index % 2 === 1) {\n        this.setState({\n          displayText: ''\n        })\n        setTimeout(() => this.updateIndex(), this.props.interval * 1000 * 0.2)\n      } else {\n        this.setState({\n          displayText: slogan[this.index / 2]\n        })\n      }\n      this.index++\n    }\n  }\n\n  componentDidMount() {\n    this.updateIndex()\n    this.timer = setInterval(this.updateIndex, this.props.interval * 1000)\n  }\n\n  componentWillUnmount() {\n    if (this.timer !== undefined) {\n      clearInterval(this.timer)\n    }\n  }\n\n  render() {\n    const split = this.state.displayText ?\n      this.state.displayText.split(\"|\") : []\n    const display = []\n    let idx = 0\n    for (let i = 0; i < split.length; i++) {\n      if (i > 0) display.push(<br key={idx * 2 + 1}/>)\n      display.push(\n        <ReactMarkdown\n          key={idx * 2}\n          renderers={{'paragraph': 'span'}}\n          allowedTypes={[\n            'root', 'paragraph', 'emphasis',\n            'strong', 'delete', 'link', 'linkReference',\n            'text'\n          ]}\n          source={split[i]}/>\n      )\n    }\n    return (\n      <div style={{\n        userSelect: 'none',\n        textAlign: this.props.textAlign,\n        fontSize: this.props.fontSize,\n        color: this.props.fontColor\n      }}>\n        <ReactCSSTransitionGroup\n          transitionLeaveTimeout={this.props.interval * 1000 * 0.2}\n          transitionEnterTimeout={this.props.interval * 1000 * 0.2}\n          transitionName=\"fade\">\n          {display}\n        </ReactCSSTransitionGroup>\n      </div>\n    )\n  }\n}\n\nexport default ShiftTextComponent\n","export const White = {\n  primary: '#fff',\n  primaryDark: '#fff',\n  background: '#fff',\n  accent: '#000',\n  textPrimary: '#000',\n  textSecondary: '#757575',\n}\n\nexport const Light = {\n  primary: '#fefefe',\n  primaryDark: '#f5f5f5',\n  background: '#F5F5F5',\n  accent: '#000',\n  textPrimary: '#212121',\n  textSecondary: '#9E9E9E',\n}\n\nexport const Dark = {\n  primary: '#323639',\n  primaryDark: '#282c2f',\n  background: '#303030',\n  accent: '#fff',\n  textPrimary: '#fafafa',\n  textSecondary: '#d6d6d6',\n}\n\nexport const Black = {\n  primary: '#1c2226',\n  primaryDark: '#1b2024',\n  background: '#000',\n  accent: '#fff',\n  textPrimary: '#fff',\n  textSecondary: '#a0a0a1',\n}\n\nexport const ChromeDark = {\n  primary: '#333639',\n  primaryDark: '#292c2f',\n  background: '#202124',\n  accent: '#fff',\n  textPrimary: '#f1f3f4',\n  textSecondary: '#9ba0a5',\n}\n","import {Black, Dark, White, Light, ChromeDark} from './themes'\n\nexport default function getTheme(theme) {\n  if (theme === undefined) return Light\n  switch (theme.toLowerCase()) {\n    case 'light':\n      return Light\n    case 'dark':\n      return Dark\n    case 'white':\n      return White\n    case 'black':\n      return Black\n    case 'chrome-dark':\n      return ChromeDark\n    default:\n      return Light\n  }\n}\n","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  box-sizing: border-box;\n  height: 64px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 48px 16px;\n`\n\nconst Title = styled.h1`\n  padding: 0;\n  margin: 0;\n`\n\nexport default class AppHeader extends Component {\n  static propTypes = {\n    leftExtra: PropTypes.object,\n    rightExtra: PropTypes.object\n  }\n\n  render() {\n    const {title, leftExtra, rightExtra} = this.props\n    return (\n      <header style={{\n        width: '100%',\n        ...this.props.style\n      }}>\n        <Container>\n          {\n            leftExtra === undefined ? undefined :\n              <div style={{marginRight: 16,}}>\n                {leftExtra}\n              </div>\n          }\n          <Title>{title}</Title>\n          <div style={{flex: 1}}/>\n          {\n            rightExtra === undefined ? undefined :\n              <div style={{marginLeft: 16}}>\n                {rightExtra}\n              </div>\n          }\n        </Container>\n      </header>\n    )\n  }\n}\n","export const getQueryParamsFromUrl = (query) => {\n  return new URLSearchParams(window.location.search).get(query)\n}\n","import React, {Component} from 'react'\nimport ShiftTextComponent from \"../components/ShiftTextComponent\"\nimport './HomePage.css'\nimport {Link} from \"react-router-dom\"\nimport {connect} from \"react-redux\"\nimport getTheme from \"../theme\"\nimport {defineMessages, injectIntl} from \"react-intl\"\nimport AppHeader from \"../components/AppHeader\"\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group'\nimport {MdSettings} from 'react-icons/md'\nimport styled from 'styled-components'\nimport {getQueryParamsFromUrl} from '../utils/urlUtil'\n\nconst Root = styled.div`\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  \n  @media (max-width: 768px) {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n  }\n`\n\nclass HomePage extends Component {\n  state = {\n    idle: true\n  }\n\n  getSlogan = () => {\n    let slogan = this.props.slogan\n    if (!this.props.slogan || this.props.slogan.trim().length === 0) {\n      const messages = defineMessages({\n        defaultSlogan: {\n          id: 'slogan.default'\n        }\n      })\n      const {intl} = this.props\n      slogan = intl.formatMessage(messages.defaultSlogan)\n    }\n\n    return slogan.split('\\n')\n      .filter(item => item !== undefined && item != null)\n      .map(item => item.trim())\n      .filter(item => item.length > 0)\n  }\n\n  mouseCountdown = undefined\n\n  handleMouseMove = () => {\n    if (this.state.idle) {\n      this.setState({\n        idle: false\n      })\n    }\n    if (this.mouseCountdown !== undefined) {\n      window.clearTimeout(this.mouseCountdown)\n      this.mouseCountdown = undefined\n    }\n    this.mouseCountdown = window.setTimeout(\n      () => this.setState({\n        idle: true\n      }), 2000)\n  }\n\n  componentWillUnmount() {\n    if (this.mouseCountdown !== undefined) {\n      window.clearTimeout(this.mouseCountdown)\n      this.mouseCountdown = undefined\n    }\n  }\n\n  render() {\n    const theme = this.props.theme\n    const palette = getTheme(theme)\n\n    const settingsIcon = (\n      <Link to={`/settings`}>\n        <h1><MdSettings\n          style={{\n            color: palette.textSecondary,\n            cursor: 'pointer',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          }}/></h1>\n      </Link>\n    )\n    return (\n      <Root\n        style={{\n          background: palette.background,\n          cursor: this.state.idle ? 'none' : 'default'\n        }}\n        onMouseMove={this.handleMouseMove}>\n        <ReactCSSTransitionGroup\n          transitionLeaveTimeout={500}\n          transitionEnterTimeout={300}\n          transitionName=\"fade\">\n          {this.state.idle ? undefined :\n            <AppHeader\n              style={{position: 'absolute', top: 0,}}\n              rightExtra={settingsIcon}/>\n          }\n        </ReactCSSTransitionGroup>\n        <main style={{\n          boxSizing: 'border-box',\n          height: '100%',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }}>\n          <ShiftTextComponent\n            textAlign={'center'}\n            fontColor={palette.textPrimary}\n            fontSize={72}\n            slogan={this.getSlogan()}\n          />\n        </main>\n      </Root>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  let slogan = getQueryParamsFromUrl('slogan')\n  if (slogan) {\n    slogan = slogan.replace('||', '\\n')\n  }\n\n  return {\n    language: state.settings.language,\n    theme: getQueryParamsFromUrl('theme') || state.settings.theme,\n    slogan: slogan || state.settings.slogan\n  }\n}\n\nexport default connect(mapStateToProps)(injectIntl(HomePage))\n","export const UPDATE_LANGUAGE = \"UPDATE_LANGUAGE\"\n\nexport const UPDATE_THEME = \"UPDATE_THEME\"\n\nexport const UPDATE_SLOGAN = \"UPDATE_SLOGAN\"\n\nexport const UPDATE_INTERVAL = \"UPDATE_INTERVAL\"\n\nexport const UPDATE_FONT_SIZE = \"UPDATE_FONT_SIZE\"\n\nexport const UPDATE_FONT_ALIGN = \"UPDATE_FONT_ALIGN\"","import {\n  UPDATE_FONT_ALIGN,\n  UPDATE_FONT_SIZE,\n  UPDATE_INTERVAL,\n  UPDATE_LANGUAGE,\n  UPDATE_SLOGAN,\n  UPDATE_THEME\n} from \"../ActionTypes\"\n\nexport const updateLanguage = language => ({\n  type: UPDATE_LANGUAGE,\n  language\n})\n\nexport const updateTheme = theme => ({\n  type: UPDATE_THEME,\n  theme\n})\n\nexport const updateSlogan = slogan => ({\n  type: UPDATE_SLOGAN,\n  slogan\n})\n\nexport const updateInterval = interval => ({\n  type: UPDATE_INTERVAL,\n  interval\n})\n\nexport const updateFontSize = fontSize => ({\n  type: UPDATE_FONT_SIZE,\n  fontSize\n})\n\nexport const updateFontAlign = fontAlign => ({\n  type: UPDATE_FONT_ALIGN,\n  fontAlign\n})\n","export function hexToRgbA(hex, alpha) {\n  var c\n  if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n    c = hex.substring(1).split('')\n    if (c.length === 3) {\n      c = [c[0], c[0], c[1], c[1], c[2], c[2]]\n    }\n    c = '0x' + c.join('')\n    return 'rgba(' + [(c >> 16) & 255, (c >> 8) & 255, c & 255].join(',') + ',' + (alpha !== undefined ? alpha : 1) + ')'\n  }\n  throw new Error('Bad Hex')\n}\n","import React, {Component} from 'react'\nimport {FormattedMessage} from \"react-intl\"\nimport styled from 'styled-components'\n\nconst Title = styled.div`\n  padding: 16px 0;\n  font-weight: bold;\n  font-size: 1.5rem;\n`\n\nexport default class PreferenceGroup extends Component {\n  render() {\n    const {title, titleId, children} = this.props\n\n    if (titleId !== undefined) {\n      return (\n        <div>\n          <FormattedMessage id={titleId}>\n            {text => <Title>{text}</Title>}\n          </FormattedMessage>\n          <div>\n            {children}\n          </div>\n        </div>\n      )\n    }\n    return (\n      <div>\n        <Title>{title}</Title>\n        <div>\n          {children}\n        </div>\n      </div>\n    )\n  }\n}\n","import React, {Component} from 'react'\nimport getTheme from \"../theme\"\nimport {hexToRgbA} from \"../utils/colorUtil\"\nimport {FormattedMessage} from \"react-intl\"\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  padding: 16px 0;\n  margin-bottom: 16px;\n  border: 0 solid;\n  border-bottom-width: 1px;\n`\n\nexport default class PreferenceItem extends Component {\n  render() {\n    const {title, titleId, actionView} = this.props\n    let itemView = (\n      <div style={{display: 'flex'}}>\n        <div style={{flex: 1}}>\n          {\n            titleId ?\n              <FormattedMessage id={titleId}/> :\n              <span>{title}</span>\n          }\n        </div>\n        <div style={{flex: 2}}>\n          <div>{actionView}</div>\n        </div>\n      </div>\n    )\n\n    return (\n      <Container style={{\n        borderColor: hexToRgbA(getTheme(this.props.theme).textSecondary, 0.2)\n      }}>\n        {itemView}\n        {this.props.children}\n      </Container>\n    )\n  }\n}\n","import {Component} from \"react\"\nimport getTheme from \"../../theme\"\nimport PreferenceGroup from \"../../components/PerferenceGroup\"\nimport PreferenceItem from \"../../components/PreferenceItem\"\nimport {FormattedMessage} from \"react-intl\"\nimport React from \"react\"\n\nexport default class LanguageTab extends Component {\n  onSelect = (e) => {\n    this.props.updateLanguage(e.target.value)\n  }\n\n  render() {\n    const {theme} = this.props\n    const scheme = getTheme(theme)\n    return (\n      <PreferenceGroup titleId={'settings.language'}>\n        <PreferenceItem>\n          <select className={'setting-select'}\n                  style={{\n                    backgroundColor: scheme.primary,\n                    color: scheme.textPrimary\n                  }}\n                  value={this.props.language}\n                  onChange={this.onSelect}>\n            <FormattedMessage id={'settings.language.default'}>\n              {text => <option value=\"\">{text}</option>}\n            </FormattedMessage>\n            <option value=\"zh-Hans\">简体中文</option>\n            <option value=\"zh-Hant\">正體中文</option>\n            <option value=\"en-US\">English</option>\n          </select>\n        </PreferenceItem>\n      </PreferenceGroup>\n    )\n  }\n}\n","import {Component} from \"react\"\nimport {defineMessages, FormattedMessage} from \"react-intl\"\nimport autosize from \"autosize\"\nimport getTheme from \"../../theme\"\nimport PreferenceGroup from \"../../components/PerferenceGroup\"\nimport PreferenceItem from \"../../components/PreferenceItem\"\nimport {MdArrowDropDown, MdArrowDropUp} from \"react-icons/md\"\nimport ReactMarkdown from \"react-markdown\"\nimport ShiftTextComponent from \"../../components/ShiftTextComponent\"\nimport React from \"react\"\n\nexport default class SloganTab extends Component {\n  state = {\n    text: '',\n    showSyntax: false,\n    fontSize: 72,\n    interval: 2\n  }\n  messages = defineMessages({\n    saveSuccess: {\n      id: 'action.save.success'\n    }\n  })\n\n  componentDidMount() {\n    this.setSlogan()\n    this.setState({\n      interval: this.props.interval\n    })\n  }\n\n  setSlogan = () => {\n    if (this.props.slogan === undefined || this.props.slogan == null || this.props.slogan.trim().length === 0) {\n      const messages = defineMessages({\n        defaultSlogan: {\n          id: 'slogan.default'\n        }\n      })\n      const {intl} = this.props\n      this.setState({\n        text: intl.formatMessage(messages.defaultSlogan)\n      })\n    } else {\n      this.setState({\n        text: this.props.slogan\n      })\n    }\n  }\n\n  updateTextareaSize = () => {\n    const textarea = this.refs.textarea\n    autosize(textarea)\n  }\n\n  onTextChange = (e) => {\n    const text = e.target.value\n    if (text === undefined) this.setState({text: ''})\n    else {\n      this.setState({text: text})\n    }\n  }\n\n  onIntervalChange = (e) => {\n    const s = e.target.value\n    if (s === undefined) return\n    let k = 0\n    for (let i = 0; i < s.length; i++) {\n      if (s[i] >= '0' && s[i] <= '9') {\n        k = k * 10 + (s[i] - '0')\n      }\n    }\n    this.props.updateInterval(k)\n  }\n\n  onSave = () => {\n    this.props.updateSlogan(this.state.text)\n    alert(this.props.intl.formatMessage(this.messages.saveSuccess))\n    this.setSlogan()\n  }\n\n  onReset = () => {\n    this.props.updateSlogan('')\n    this.setSlogan()\n  }\n\n  validateNumberInput = (e) => {\n    let key\n    const theEvent = e || window.event\n\n    if (theEvent.type === 'paste') {\n      key = theEvent.clipboardData.getData('text/plain')\n    } else {\n      key = theEvent.keyCode || theEvent.which\n      key = String.fromCharCode(key)\n    }\n    const regex = /[0-9]|\\./\n    if (!regex.test(key)) {\n      theEvent.returnValue = false\n      if (theEvent.preventDefault) theEvent.preventDefault()\n    }\n  }\n\n  render() {\n    const {theme} = this.props\n    const scheme = getTheme(theme)\n    // 渲染好界面后更新输入框大小\n    window.requestAnimationFrame(() => this.updateTextareaSize())\n\n    const customTab = (\n      <PreferenceGroup titleId={\"settings.slogan.custom\"}>\n        <PreferenceItem>\n          <div>\n                        <textarea\n                          onChange={this.onTextChange}\n                          value={this.state.text}\n                          ref={\"textarea\"}\n                          onKeyUp={this.updateTextareaSize}\n                          className={'slogan-textarea'}\n                          spellCheck=\"false\"\n                          style={{\n                            backgroundColor: scheme.primary,\n                            color: scheme.textPrimary\n                          }}/>\n            <div style={{\n              paddingRight: 16,\n              paddingLeft: 16,\n              userSelect: 'none',\n              color: scheme.textSecondary,\n              fontSize: '0.8rem'\n            }}>\n              <div onClick={() => this.setState({showSyntax: !this.state.showSyntax})}\n                   style={{\n                     display: 'flex',\n                     alignItems: 'center'\n                   }}>\n                <FormattedMessage id={'settings.slogan.syntax'}/>\n                {\n                  this.state.showSyntax ?\n                    <MdArrowDropUp style={{\n                      verticalAlign: 'middle',\n                      marginLeft: 4,\n                      fontSize: '1rem'\n                    }}/>\n                    : <MdArrowDropDown style={{\n                      verticalAlign: 'middle',\n                      marginLeft: 4,\n                      fontSize: '1rem'\n                    }}/>\n                }\n              </div>\n              {this.state.showSyntax ?\n                <div>\n                  <FormattedMessage id={'settings.slogan.syntax.summary'}>\n                    {(text) => <ReactMarkdown\n                      renderers={{'paragraph': 'div'}}\n                      source={text}/>}\n                  </FormattedMessage>\n                </div> : undefined\n              }\n            </div>\n          </div>\n          <div style={{\n            width: '100%',\n            display: 'flex',\n            flexDirection: 'row',\n          }}>\n            <div style={{flex: 1}}/>\n            <div className={\"button-bar\"}>\n              <button onClick={this.onReset}\n                      style={{\n                        backgroundColor: scheme.primary,\n                        color: scheme.textPrimary\n                      }}>\n                <FormattedMessage id={'action.reset'}/>\n              </button>\n              <button onClick={this.onSave}\n                      style={{\n                        backgroundColor: scheme.primary,\n                        color: scheme.textPrimary\n                      }}>\n                <FormattedMessage id={'action.save'}/>\n              </button>\n            </div>\n          </div>\n        </PreferenceItem>\n      </PreferenceGroup>\n    )\n    const otherTab = <PreferenceGroup title={\"其他设置\"}>\n      <PreferenceItem\n        title={\"时间间隔\"}\n        iconName={'stopwatch'}\n        actionView={\n          <div>\n            <input\n              className={'setting-input'}\n              value={this.props.interval}\n              onKeyPress={this.validateNumberInput}\n              style={{\n                borderColor: scheme.textSecondary,\n                color: scheme.textPrimary,\n                backgroundColor: scheme.primary,\n                width: '3rem',\n                textAlign: 'center',\n                marginRight: 8,\n              }}\n              onChange={this.onIntervalChange}/>\n            <span>秒</span>\n          </div>\n        }/>\n      <PreferenceItem title={\"字体大小\"} iconName={'font'}/>\n      <PreferenceItem title={\"文本对齐\"} iconName={'align-center'} actionView={\n        <div>\n          <div style={{display: 'inline-block'}}>\n            <input type=\"radio\" id=\"left\" value=\"left\"/>\n            <span>Left</span>\n          </div>\n          <div style={{display: 'inline-block'}}>\n            <input type=\"radio\" id=\"center\" value=\"center\"/>\n            <span>Center</span>\n          </div>\n          <div style={{display: 'inline-block'}}>\n            <input type=\"radio\" id=\"right\" value=\"right\"/>\n            <span>Right</span>\n          </div>\n        </div>\n      }/>\n    </PreferenceGroup>\n    const previewTab = <PreferenceGroup title={'效果预览'}>\n      <PreferenceItem>\n        <div style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          width: '100%',\n          minHeight: 5 * this.state.fontSize\n        }}>\n          <ShiftTextComponent\n            textAlign={'center'}\n            fontColor={scheme.textPrimary}\n            fontSize={this.state.fontSize}\n            interval={this.state.interval}\n            slogan={this.state.text.split('\\n')}/>\n        </div>\n      </PreferenceItem>\n    </PreferenceGroup>\n\n    return (\n      <div>\n        {customTab}\n      </div>\n    )\n  }\n}\n","import {Component} from \"react\"\nimport getTheme from \"../../theme\"\nimport {hexToRgbA} from \"../../utils/colorUtil\"\nimport {FormattedMessage} from \"react-intl\"\nimport PreferenceGroup from \"../../components/PerferenceGroup\"\nimport PreferenceItem from \"../../components/PreferenceItem\"\nimport React from \"react\"\nimport styled from 'styled-components'\n\nconst ThemeBlockContainer = styled.div`\n  margin: 8px;\n  display: inline-block;\n  border: 1px solid;\n  border-radius: 8px;\n  padding: 16px 16px 14px;\n  user-select: none;\n  cursor: pointer;\n  font-size: 1rem;\n`\n\nconst ThemeBlockSelection = styled.div`\n  height: 2px;\n  margin-top: 2px;\n  border-width: 0;\n  border-radius: 2px;\n`\n\nexport default class AppearanceTab extends Component {\n\n  onThemeSelect = (theme) => {\n    this.props.updateTheme(theme)\n  }\n\n  render() {\n    const {theme, updateTheme} = this.props\n    if (theme === undefined) {\n      updateTheme('light')\n    }\n    const scheme = getTheme(theme)\n    const ThemeBlock = ({titleId, value}) => {\n      return (\n        <ThemeBlockContainer\n          onClick={() => this.onThemeSelect(value)}\n          style={{\n            borderColor: hexToRgbA(scheme.textSecondary, 0.2),\n            color: getTheme(value).textPrimary,\n            backgroundColor: getTheme(value).background,\n          }}>\n          <FormattedMessage id={titleId}/>\n          <ThemeBlockSelection style={{\n            backgroundColor: value === theme ? scheme.accent : 'transparent'\n          }}/>\n        </ThemeBlockContainer>\n      )\n    }\n\n    return (\n      <div>\n        <FormattedMessage id={'settings.appearance.theme'}>\n          {text =>\n            <PreferenceGroup title={text}>\n              <PreferenceItem>\n                <div style={{width: '100%'}}>\n                  <ThemeBlock\n                    value={'white'}\n                    titleId={'settings.appearance.theme.white'}/>\n                  <ThemeBlock\n                    value={'light'}\n                    titleId={'settings.appearance.theme.light'}/>\n                  <ThemeBlock\n                    value={'dark'}\n                    titleId={'settings.appearance.theme.dark'}/>\n                  <ThemeBlock\n                    value={'black'}\n                    titleId={'settings.appearance.theme.black'}/>\n                  <ThemeBlock\n                    value={'chrome-dark'}\n                    titleId={'settings.appearance.theme.chrome-dark'}/>\n                </div>\n              </PreferenceItem>\n            </PreferenceGroup>\n          }\n        </FormattedMessage>\n      </div>\n    )\n  }\n}\n","import {Component} from \"react\"\nimport {FormattedMessage} from \"react-intl\"\nimport PreferenceGroup from \"../../components/PerferenceGroup\"\nimport PreferenceItem from \"../../components/PreferenceItem\"\nimport React from \"react\"\n\nexport default class ApplicationTab extends Component {\n  state = {\n    deferredPrompt: undefined\n  }\n\n  constructor(props) {\n    super(props)\n    window.addEventListener('beforeinstallprompt', (e) => {\n      // Prevent Chrome 67 and earlier from automatically showing the prompt\n      e.preventDefault()\n      // Stash the event so it can be triggered later.\n      this.setState({\n        deferredPrompt: e\n      })\n    })\n  }\n\n  onAddPwa = () => {\n    this.setState.deferredPrompt.prompt()\n    // Wait for the user to respond to the prompt\n    this.setState.deferredPrompt.userChoice.then((choiceResult) => {\n      if (choiceResult.outcome === 'accepted') {\n        console.log('User accepted the A2HS prompt')\n      } else {\n        console.log('User dismissed the A2HS prompt')\n      }\n    })\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"settings.application\">\n        {(title) => (\n          <PreferenceGroup title={title}>\n            <PreferenceItem\n              title={'PWA'}\n              actionView={\n                <button onClick={this.onAddPwa}>添加</button>\n              }>\n            </PreferenceItem>\n            <PreferenceItem>\n              <div style={{display: 'flex', flexDirection: 'row'}}>\n                <div>Chrome 扩展</div>\n                <div><a>Download</a></div>\n              </div>\n            </PreferenceItem>\n          </PreferenceGroup>\n        )}\n      </FormattedMessage>\n    )\n  }\n}\n","import {Component} from \"react\"\nimport getTheme from \"../../theme/index\"\nimport {FormattedMessage} from \"react-intl\"\nimport PreferenceGroup from \"../../components/PerferenceGroup\"\nimport PreferenceItem from \"../../components/PreferenceItem\"\nimport packageJson from \"../../../package.json\"\nimport React from \"react\"\n\nexport default class AboutTab extends Component {\n  render() {\n    const {theme} = this.props\n    const scheme = getTheme(theme)\n    const about = <FormattedMessage id={'settings.about'}>\n      {text =>\n        <PreferenceGroup title={text}>\n          <PreferenceItem>\n            <div><span role={'img'} aria-label={'logo'}>💼</span> Version {packageJson.version}</div>\n          </PreferenceItem>\n          <PreferenceItem>\n            <div>\n              <a href={'https://github.com/sorcererXW/iloveworks'}\n                 target={'_blank'}\n                 style={{\n                   fontWeight: '600',\n                   color: scheme.accent\n                 }}>\n                Github\n              </a>\n            </div>\n          </PreferenceItem>\n          <PreferenceItem>\n            <div>\n              <a href={'https://github.com/sorcererXW/iloveworks/releases'}\n                 target={'_blank'}\n                 style={{\n                   fontWeight: '600',\n                   color: scheme.accent\n                 }}>\n                <FormattedMessage id={'settings.about.release_note'}/>\n              </a>\n            </div>\n          </PreferenceItem>\n        </PreferenceGroup>\n      }\n    </FormattedMessage>\n\n    return (\n      <div>\n        {about}\n      </div>\n    )\n  }\n}\n","import React, {Component} from 'react'\nimport './SettingsPage.css'\nimport {Link, Route, Switch, NavLink, Redirect} from \"react-router-dom\"\nimport {FormattedMessage, injectIntl} from \"react-intl\"\nimport {connect} from \"react-redux\"\nimport {updateLanguage, updateTheme, updateSlogan, updateInterval} from \"../redux/actions/SettingsAcrion\"\nimport getTheme from '../theme'\nimport {hexToRgbA} from '../utils/colorUtil'\nimport {Helmet} from \"react-helmet\"\nimport AppHeader from \"../components/AppHeader\"\nimport Responsive from 'react-responsive'\nimport {MdClose, MdMoreVert} from 'react-icons/md'\nimport LanguageTab from \"./tabs/LanguageTab\"\nimport SloganTab from \"./tabs/SloganTab\"\nimport AppearanceTab from \"./tabs/AppearanceTab\"\nimport ApplicationTab from \"./tabs/ApplicationTab\"\nimport AboutTab from \"./tabs/AboutTab\"\nimport styled from 'styled-components'\n\nconst Mobile = props => <Responsive {...props} maxWidth={425}/>\nconst Tablet = props => <Responsive {...props} minWidth={426} maxWidth={768}/>\nconst Default = props => <Responsive {...props} minWidth={769}/>\n\nconst Root = styled.div`\n  min-height: 100vh;\n  box-sizing: border-box;\n`\n\nconst Sider = styled.div`\n  padding: 16px;\n  border: 0 solid;\n  border-right-width: 1px;\n  height: 100%;\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n  \n  .selected {\n    border-radius: 8px;\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n  \n  @media (max-width: 768px) {\n    box-sizing: border-box;\n    border-right-width: 0;\n    flex-direction: row;\n    width: 100%;\n    height: auto;\n    overflow: auto;\n\n    ::-webkit-scrollbar {\n        width: 0 !important;\n    }\n  }\n`\n\nconst NavItem = styled.div`\n  text-decoration: none;\n  padding: 8px 32px 8px 16px;\n  margin-bottom: 16px;\n  margin-right: 8px;\n  font-size: 1rem;\n  white-space: pre;\n  font-weight: 500;\n  \n  :hover {\n    border-radius: 8px;\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n  \n  @media (max-width: 768px) {\n    padding: 8px 16px 8px 16px;\n    margin-right: 8px;\n  }\n`\n\nconst ContentContainer = styled.div`\n  width: 100%;\n  padding: 0 16px;\n  display: flex;\n  box-sizing: border-box;\n  flex-direction: column;\n`\n\nclass SettingsPage extends Component {\n  state = {\n    showMenu: true,\n  }\n\n  render() {\n    const {match, theme} = this.props\n    const palette = getTheme(theme)\n\n    const meta = (\n      <FormattedMessage id=\"settings\">\n        {name =>\n          <Helmet>\n            <title>{name}</title>\n          </Helmet>\n        }\n      </FormattedMessage>\n    )\n\n    const content = (\n      <ContentContainer>\n        <Switch>\n          <Route exact path={`${match.url}/slogan`}\n                 component={connect(mapStateToProps, mapDispatchToProps)(injectIntl(SloganTab))}/>\n          <Route exact path={`${match.url}/language`}\n                 component={connect(mapStateToProps, mapDispatchToProps)(LanguageTab)}/>\n          <Route exact path={`${match.url}/appearance`}\n                 component={connect(mapStateToProps, mapDispatchToProps)(AppearanceTab)}/>\n          <Route exact path={`${match.url}/application`}\n                 component={connect(mapStateToProps, mapDispatchToProps)(ApplicationTab)}/>\n          <Route exact path={`${match.url}/about`}\n                 component={connect(mapStateToProps, mapDispatchToProps)(AboutTab)}/>\n          <Route render={() => <Redirect to={`${match.url}/appearance`}/>}/>\n        </Switch>\n      </ContentContainer>\n    )\n\n    const links = ['appearance', 'slogan', 'language', 'about']\n\n    const closeIcon = (\n      <Link to={`/`}>\n        <MdClose style={{\n          color: palette.textPrimary,\n          fontSize: '2em',\n          verticalAlign: 'middle'\n        }}/>\n      </Link>\n    )\n\n    const moreIcon = (\n      <MdMoreVert\n        style={{\n          color: palette.textPrimary,\n          fontSize: '2em',\n          verticalAlign: 'middle'\n        }}\n        onClick={() => this.setState({showMenu: !this.state.showMenu})}/>\n    )\n\n    return (\n      <Root style={{\n        backgroundColor: palette.background,\n        color: palette.textPrimary\n      }}>\n        {meta}\n        <FormattedMessage id=\"settings\">\n          {title => [\n            <Default key={0}><AppHeader title={title} rightExtra={closeIcon}/></Default>,\n            <Tablet key={1}><AppHeader title={title} leftExtra={closeIcon}/></Tablet>,\n            <Mobile key={2}><AppHeader title={title} leftExtra={closeIcon} rightExtra={moreIcon}/></Mobile>,\n          ]}\n        </FormattedMessage>\n        <Default>\n          <main style={{\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'row'\n          }}>\n            <Sider\n              style={{\n                borderColor: hexToRgbA(palette.textSecondary, 0.2),\n              }}>\n              {\n                links.map((link, key) => (\n                  <NavLink\n                    key={key}\n                    activeClassName={'selected'}\n                    activeStyle={{color: palette.textPrimary}}\n                    style={{color: palette.textSecondary}}\n                    to={`${match.url}/${link}`}>\n                    <NavItem>\n                      <FormattedMessage id={`settings.${link}`}/>\n                    </NavItem>\n                  </NavLink>\n                ))\n              }\n            </Sider>\n            {content}\n          </main>\n        </Default>\n        <Tablet>\n          <main style={{\n            width: '100%',\n            display: 'flex',\n            flexDirection: 'column'\n          }}>\n            <Sider\n              style={{\n                borderColor: hexToRgbA(palette.textSecondary, 0.2),\n              }}>\n              {\n                links.map((link, key) => (\n                  <NavLink\n                    key={key}\n                    activeClassName={'selected'}\n                    activeStyle={{color: palette.textPrimary}}\n                    style={{color: palette.textSecondary}}\n                    to={`${match.url}/${link}`}>\n                    <NavItem>\n                      <FormattedMessage id={`settings.${link}`}/>\n                    </NavItem>\n                  </NavLink>\n                ))\n              }\n            </Sider>\n            {content}\n          </main>\n        </Tablet>\n        <Mobile>\n          <main style={{\n            width: '100%',\n            display: 'flex',\n            flexDirection: 'column'\n          }}>\n            {\n              this.state.showMenu ?\n                <Sider\n                  style={{\n                    borderColor: hexToRgbA(palette.textSecondary, 0.2),\n                    width: '100%',\n                    display: 'flex',\n                    flexDirection: 'column'\n                  }}>\n                  {\n                    links.map((link, key) => (\n                      <NavLink\n                        key={key}\n                        activeClassName={'selected'}\n                        activeStyle={{color: palette.textPrimary}}\n                        style={{color: palette.textSecondary}}\n                        to={`${match.url}/${link}`}>\n                        <NavItem>\n                          <FormattedMessage id={`settings.${link}`}/>\n                        </NavItem>\n                      </NavLink>\n                    ))\n                  }\n                </Sider> : undefined\n            }\n            {content}\n          </main>\n        </Mobile>\n      </Root>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.settings.language,\n    theme: state.settings.theme,\n    slogan: state.settings.slogan,\n    interval: state.settings.interval\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateLanguage: language => dispatch(updateLanguage(language)),\n  updateTheme: theme => dispatch(updateTheme(theme)),\n  updateSlogan: slogan => dispatch(updateSlogan(slogan)),\n  updateInterval: interval => dispatch(updateInterval(interval))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsPage)\n","export default {\n  'appName': '我爱工作',\n\n  'slogan.default': \"\"\n    + \"**优秀**|是一种习惯\\n\"\n    + \"**优秀**|是与生俱来的天赋\\n\"\n    + \"**我爱工作**\\n\"\n    + \"工作使我快乐\\n\"\n    + \"我徜徉在工作的海洋里\\n\"\n    + \"上司叫我吃饭|我充耳不闻\\n\"\n    + \"同事喊我喝水|我无动于衷\\n\"\n    + \"老板喊我睡觉|我百般推辞\",\n\n  'action.ok': '好的',\n  'action.save': '保存',\n  'action.save.success': '保存成功',\n  'action.cancel': '取消',\n  'action.reset': '重置',\n\n  'settings': '设置',\n  'settings.application': '应用程序',\n  'settings.appearance': '界面',\n  'settings.language': '语言',\n  'settings.language.default': '跟随系统',\n  'settings.about': '关于',\n  'settings.slogan': '标语',\n  'settings.slogan.syntax': '语法说明',\n  'settings.slogan.syntax.summary': '一行语句为一段，使用 | 进行段内分行\\n\\n'\n    + '另外支持使用部分简单的 Markdown 语法：\\n\\n'\n    + '`**加粗**` ⇨ **加粗**\\n\\n'\n    + '`*斜体*` ⇨ *斜体*\\n\\n'\n    + '`~~删除~~` ⇨ ~~删除~~',\n  'settings.slogan.custom': '自定义标语',\n  'settings.slogan.interval': '时间间隔',\n  'settings.about.release_note': '更新日志',\n  'settings.appearance.theme': '主题',\n  'settings.appearance.theme.white': '白 色',\n  'settings.appearance.theme.black': '黑 色',\n  'settings.appearance.theme.light': '亮 色',\n  'settings.appearance.theme.dark': '暗 色',\n  'settings.appearance.theme.chrome-dark': 'Chrome(暗)',\n}\n","export default {\n  'appName': '我愛工作',\n\n  'slogan.default': \"\"\n    + \"**優秀**|是一種習慣\\n\"\n    + \"**優秀**|是與生俱來的天賦\\n\"\n    + \"**我愛工作**\\n\"\n    + \"工作使我快樂\\n\"\n    + \"我徜徉在工作的海洋裡\\n\"\n    + \"上司叫我吃飯|我充耳不聞\\n\"\n    + \"同事喊我喝水|我無動於衷\\n\"\n    + \"老闆喊我睡覺|我百般推辭\",\n\n  'action.ok': '好的',\n  'action.save': '保存',\n  'action.save.success': '保存成功',\n  'action.cancel': '取消',\n  'action.reset': '重置',\n\n  'settings': '設置',\n  'settings.application': '應用程序',\n  'settings.appearance': '界面',\n  'settings.language': '語言',\n  'settings.language.default': '跟隨系統',\n  'settings.about': '關於',\n  'settings.slogan': '標語',\n  'settings.slogan.syntax': '語法說明',\n  'settings.slogan.syntax.summary': '一行語句為一段，使用 | 進行段內分行\\n\\n'\n    + '另外支持使用部分簡單的 Markdown 語法：\\n\\n'\n    + '`**加粗**` ⇨ **加粗**\\n\\n'\n    + '`*斜體*` ⇨ *斜體*\\n\\n'\n    + '`~~刪除~~` ⇨ ~~刪除~~',\n  'settings.slogan.custom': '自定義標語',\n  'settings.slogan.interval': '時間間隔',\n  'settings.about.release_note': '更新日誌',\n  'settings.appearance.theme': '主題',\n  'settings.appearance.theme.white': '白 色',\n  'settings.appearance.theme.black': '黑 色',\n  'settings.appearance.theme.light': '亮 色',\n  'settings.appearance.theme.dark': '暗 色',\n  'settings.appearance.theme.chrome-dark': 'Chrome(暗)',\n}\n","export default {\n  'appName': 'I ❤ Works',\n\n  'slogan.default': \"\"\n    + \"**Excellent**| is a habit\\n\"\n    + \"**Excellent**| is a gift\\n\"\n    + \"**I love working**\\n\"\n    + \"Working makes me happy\\n\"\n    + \"I am in the ocean of work\\n\"\n    + \"Boss told me to have lunch | I turn a deaf ear\\n\"\n    + \"Colleagues call me to drink | I am indifferent\\n\"\n    + \"Manager call me to sleep | I refuse strongly\",\n\n  'action.ok': 'OK',\n  'action.save': 'Save',\n  'action.save.success': 'Saved successfully',\n  'action.cancel': 'Cancel',\n  'action.reset': 'Reset',\n\n  'settings': 'Settings',\n  'settings.application': 'Application',\n  'settings.appearance': 'Appearance',\n  'settings.language': 'Language',\n  'settings.language.default': 'Default',\n  'settings.about': 'About',\n  'settings.slogan': 'Slogan',\n  'settings.slogan.syntax': 'Syntax description',\n  'settings.slogan.syntax.summary': 'One line statement is a paragraph, use \\'|\\' to perform line break \\n\\n'\n    + 'And you can use some basic Markdown inline syntax: \\n\\n'\n    + '`**Bold**` ⇨ **Bold**\\n\\n'\n    + '`*Italic*` ⇨ *Italic*\\n\\n'\n    + '`~~Delete~~` ⇨ ~~Delete~~',\n  'settings.slogan.custom': 'Custom slogan',\n  'settings.slogan.interval': 'Interval',\n  'settings.about.release_note': 'Release Notes',\n  'settings.appearance.theme': 'Theme',\n  'settings.appearance.theme.white': 'White',\n  'settings.appearance.theme.black': 'Black',\n  'settings.appearance.theme.light': 'Light',\n  'settings.appearance.theme.dark': 'Dark',\n  'settings.appearance.theme.chrome-dark': 'Chrome Dark',\n}\n","import zhHans from \"./zh-Hans\"\nimport zhHant from \"./zh-Hant\"\nimport enUS from \"./en-US\"\n\nexport function mergeLanguage(...languages) {\n  const output = {}\n  for (let lang of languages) {\n    for (let key in lang) {\n      output[key + ''] = lang[key + '']\n    }\n  }\n  return output\n}\n\nexport function getLocale(language) {\n  let target = undefined\n  if (language !== undefined && language != null && language.length > 0) {\n    target = language\n  } else {\n    target = navigator.userLanguage || navigator.language\n  }\n  let result = {}\n  switch (target.toLocaleLowerCase()) {\n    case 'zh':\n    case 'zh-hans':\n    case 'zh-cn':\n      result = zhHans\n      break\n    case 'zh-hk':\n    case 'zh-tw':\n    case 'zh-mo':\n    case 'zh-sg':\n    case 'zh-hant':\n      result = mergeLanguage(zhHans, zhHant)\n      break\n    default:\n      result = enUS\n  }\n  return mergeLanguage(enUS, result)\n}\n","import React, {Component} from 'react'\n\nimport {BrowserRouter, Redirect, Route, Switch} from 'react-router-dom'\n\nimport HomePage from \"./containers/HomePage\"\nimport SettingsPage from \"./containers/SettingsPage\"\n\nimport {connect} from 'react-redux'\n\nimport {getLocale} from './locale'\n\nimport {addLocaleData, FormattedMessage, IntlProvider} from \"react-intl\"\nimport zh from 'react-intl/locale-data/zh'\nimport en from 'react-intl/locale-data/en'\nimport {Helmet} from \"react-helmet\"\n\nimport getTheme from \"./theme\"\nimport {getQueryParamsFromUrl} from \"./utils/urlUtil\";\n\naddLocaleData([...en, ...zh])\n\nclass App extends Component {\n  render() {\n    const theme = this.props.theme\n    const scheme = getTheme(theme)\n\n    const meta = (\n      <FormattedMessage id={\"appName\"}>\n        {appName =>\n          <Helmet>\n            <meta charSet=\"utf-8\"/>\n            <title>{appName}</title>\n            <meta name=\"theme-color\" content={scheme.background}/>\n          </Helmet>\n        }\n      </FormattedMessage>\n    )\n\n    const route = (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path={`/`} component={HomePage}/>\n          <Route path={`/settings`} component={SettingsPage}/>\n          <Route render={() => <Redirect to={`/`}/>}/>\n        </Switch>\n      </BrowserRouter>\n    )\n\n    return (\n      <IntlProvider locale={navigator.language} messages={getLocale(this.props.language)}>\n        <div>\n          {meta}\n          {route}\n        </div>\n      </IntlProvider>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: getQueryParamsFromUrl('lang') || state.settings.language,\n    theme: state.settings.theme\n  }\n}\n\nexport default connect(mapStateToProps, null)(App)\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n)\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import * as types from '../ActionTypes'\n\nconst initialState = {}\n\nexport default function SettingsReducer(state = initialState, action) {\n  switch (action.type) {\n    case types.UPDATE_LANGUAGE:\n      return {\n        ...state,\n        language: action.language\n      }\n    case types.UPDATE_THEME:\n      return {\n        ...state,\n        theme: action.theme\n      }\n    case types.UPDATE_SLOGAN:\n      return {\n        ...state,\n        slogan: action.slogan\n      }\n    case types.UPDATE_FONT_SIZE:\n      return {\n        ...state,\n        fontSize: action.fontSize\n      }\n    case types.UPDATE_FONT_ALIGN:\n      return {\n        ...state,\n        fontAlign: action.fontAlign\n      }\n    case types.UPDATE_INTERVAL:\n      return {\n        ...state,\n        interval: action.interval\n      }\n    default:\n      return state\n  }\n}\n","import {combineReducers} from 'redux'\n\nimport SettingsReducer from './SettingsReducer'\n\nconst rootReducer = combineReducers({\n  settings: SettingsReducer\n})\n\nexport default rootReducer\n","import {applyMiddleware, createStore} from 'redux'\nimport * as actionCreators from './actions/SettingsAcrion'\nimport logger from 'redux-logger'\nimport {persistReducer} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport rootReducer from './reducers/index'\n\nconst middlewares = [logger]\nconst createStoreWithMiddleware = applyMiddleware(...middlewares)(createStore)\n\nconst enhancer = window.__REDUX_DEVTOOLS_EXTENSION__ &&\n  window.__REDUX_DEVTOOLS_EXTENSION__({actionCreators})\n\nconst persistConfig = {\n  key: 'root',\n  storage\n}\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst defaultState = {}\n\nexport default function configureStore() {\n  return createStoreWithMiddleware(persistedReducer, defaultState, enhancer)\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport registerServiceWorker from './utils/registerServiceWorker'\nimport configureStore from \"./redux/configureStore\"\nimport {Provider} from \"react-redux\"\nimport {PersistGate} from 'redux-persist/integration/react'\nimport {persistStore} from \"redux-persist\"\n\nconst store = configureStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistStore(store)}>\n      <App/>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'))\n\nregisterServiceWorker()\n"],"sourceRoot":""}