{"version":3,"sources":["components/ShiftTextComponent.js","theme/themes.js","theme/index.js","components/AppHeader.js","containers/HomePage.js","redux/ActionTypes.js","redux/actions/SettingsAcrion.js","utils/colorUtil.js","components/PerferenceGroup.js","components/PreferenceItem.js","containers/tabs/LanguageTab.js","containers/tabs/SloganTab.js","containers/tabs/AppearanceTab.js","containers/tabs/ApplicationTab.js","containers/tabs/AboutTab.js","containers/SettingsPage.js","locale/zh-Hans.js","locale/zh-Hant.js","locale/en-US.js","locale/index.js","App.js","utils/registerServiceWorker.js","redux/reducers/SettingsReducer.js","redux/reducers/index.js","redux/configureStore.js","index.js"],"names":["ShiftTextComponent","index","state","displayText","updateIndex","slogan","_this","props","undefined","setState","length","this","timer","setInterval","interval","clearInterval","split","display","idx","i","push","react_default","a","createElement","react_markdown_default","key","renderers","paragraph","allowedTypes","source","style","userSelect","textAlign","fontSize","color","fontColor","Component","defaultProps","White","primary","primaryDark","background","accent","textPrimary","textSecondary","Light","Dark","Black","ChromeDark","getTheme","theme","toLowerCase","Container","styled","div","_templateObject","Title","h1","_templateObject2","AppHeader","_this$props","title","leftExtra","rightExtra","Object","objectSpread","width","marginRight","flex","marginLeft","Root","HomePage_templateObject","HomePage","idle","getSlogan","trim","messages","defineMessages","defaultSlogan","id","intl","formatMessage","filter","item","map","mouseCountdown","handleMouseMove","window","clearTimeout","setTimeout","palette","settingsIcon","react_router_dom","to","index_esm","cursor","alignItems","justifyContent","onMouseMove","react_addons_css_transition_group_default","transitionLeaveTimeout","transitionEnterTimeout","transitionName","AppHeader_AppHeader","position","top","boxSizing","height","components_ShiftTextComponent","connect","language","settings","injectIntl","UPDATE_LANGUAGE","UPDATE_THEME","UPDATE_SLOGAN","UPDATE_INTERVAL","UPDATE_FONT_SIZE","UPDATE_FONT_ALIGN","updateLanguage","type","updateTheme","updateSlogan","updateInterval","updateFontSize","updateFontAlign","fontAlign","hexToRgbA","hex","alpha","c","test","substring","join","Error","PerferenceGroup_templateObject","PreferenceGroup","titleId","children","index_es","text","PerferenceGroup_Title","PreferenceItem_templateObject","PreferenceItem","actionView","itemView","PreferenceItem_Container","borderColor","LanguageTab","onSelect","e","target","value","scheme","PerferenceGroup_PreferenceGroup","PreferenceItem_PreferenceItem","className","backgroundColor","onChange","SloganTab","showSyntax","saveSuccess","setSlogan","updateTextareaSize","textarea","refs","autosize","onTextChange","onIntervalChange","s","k","onSave","alert","onReset","validateNumberInput","theEvent","event","clipboardData","getData","keyCode","which","String","fromCharCode","returnValue","preventDefault","_this2","requestAnimationFrame","customTab","ref","onKeyUp","spellCheck","paddingRight","paddingLeft","onClick","verticalAlign","flexDirection","iconName","onKeyPress","minHeight","ThemeBlockContainer","AppearanceTab_templateObject","ThemeBlockSelection","AppearanceTab_templateObject2","AppearanceTab","onThemeSelect","ThemeBlock","_ref","ApplicationTab","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","deferredPrompt","onAddPwa","prompt","userChoice","then","choiceResult","outcome","console","log","addEventListener","AboutTab","about","role","aria-label","packageJson","version","href","fontWeight","Mobile","react_responsive_default","assign","maxWidth","Tablet","minWidth","Default","SettingsPage_templateObject","Sider","SettingsPage_templateObject2","NavItem","_templateObject3","ContentContainer","_templateObject4","SettingsPage","showMenu","match","meta","name","Helmet","content","react_router","exact","path","concat","url","component","mapStateToProps","mapDispatchToProps","render","links","closeIcon","moreIcon","SettingsPage_Root","SettingsPage_Default","SettingsPage_Tablet","SettingsPage_Mobile","link","activeClassName","activeStyle","dispatch","zh_Hans","appName","slogan.default","action.ok","action.save","action.save.success","action.cancel","action.reset","settings.application","settings.appearance","settings.language","settings.language.default","settings.about","settings.slogan","settings.slogan.syntax","settings.slogan.syntax.summary","settings.slogan.custom","settings.slogan.interval","settings.about.release_note","settings.appearance.theme","settings.appearance.theme.white","settings.appearance.theme.black","settings.appearance.theme.light","settings.appearance.theme.dark","settings.appearance.theme.chrome-dark","zh_Hant","en_US","mergeLanguage","output","_len","arguments","languages","Array","_key","_i","_languages","lang","getLocale","navigator","userLanguage","result","zhHans","zhHant","enUS","addLocaleData","toConsumableArray","en","zh","App","charSet","route","locale","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","initialState","rootReducer","combineReducers","action","types","middlewares","logger","createStoreWithMiddleware","applyMiddleware","apply","createStore","enhancer","__REDUX_DEVTOOLS_EXTENSION__","actionCreators","persistConfig","storage","persistedReducer","persistReducer","defaultState","store","ReactDOM","es","integration_react","persistor","persistStore","src_App","document","getElementById","URL","process","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.48facc31.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport ReactMarkdown from 'react-markdown'\n\nclass ShiftTextComponent extends Component {\n  static propTypes = {\n    fontSize: PropTypes.number,\n    fontColor: PropTypes.string,\n    textAlign: PropTypes.oneOf(['center', 'left', 'right']),\n    slogan: PropTypes.array,\n    interval: PropTypes.number,\n  }\n\n  static defaultProps = {\n    fontSize: 64,\n    fontColor: '#000',\n    textAlign: 'left',\n    slogan: [],\n    interval: 2,\n  }\n\n  index = 0\n\n  state = {\n    displayText: \"\"\n  }\n\n  updateIndex = () => {\n    const slogan = this.props.slogan\n    if (slogan === undefined) {\n      this.setState({\n        displayText: \"\"\n      })\n    } else {\n      if (this.index >= slogan.length) {\n        this.index = 0\n      }\n      this.setState({\n        displayText: slogan[this.index]\n      })\n      this.index++\n    }\n  }\n\n  componentDidMount() {\n    this.updateIndex()\n    this.timer = setInterval(this.updateIndex, this.props.interval * 1000)\n  }\n\n  componentWillUnmount() {\n    if (this.timer !== undefined) {\n      clearInterval(this.timer)\n    }\n  }\n\n  render() {\n    const split = this.state.displayText ?\n      this.state.displayText.split(\"|\") : []\n    const display = []\n    let idx = 0\n    for (let i = 0; i < split.length; i++) {\n      display.push(\n        <ReactMarkdown\n          key={idx++}\n          renderers={{'paragraph': 'span'}}\n          allowedTypes={[\n            'root', 'paragraph', 'emphasis',\n            'strong', 'delete', 'link', 'linkReference',\n            'text'\n          ]}\n          source={split[i]}/>\n      )\n    }\n    return <div style={{\n      userSelect: 'none',\n      textAlign: this.props.textAlign,\n      fontSize: this.props.fontSize,\n      color: this.props.fontColor\n    }}>{display}</div>\n  }\n}\n\nexport default ShiftTextComponent\n","export const White = {\n  primary: '#fff',\n  primaryDark: '#fff',\n  background: '#fff',\n  accent: '#000',\n  textPrimary: '#000',\n  textSecondary: '#757575',\n}\n\nexport const Light = {\n  primary: '#fefefe',\n  primaryDark: '#f5f5f5',\n  background: '#F5F5F5',\n  accent: '#000',\n  textPrimary: '#212121',\n  textSecondary: '#9E9E9E',\n}\n\nexport const Dark = {\n  primary: '#323639',\n  primaryDark: '#282c2f',\n  background: '#303030',\n  accent: '#fff',\n  textPrimary: '#fafafa',\n  textSecondary: '#d6d6d6',\n}\n\nexport const Black = {\n  primary: '#1c2226',\n  primaryDark: '#1b2024',\n  background: '#000',\n  accent: '#fff',\n  textPrimary: '#fff',\n  textSecondary: '#a0a0a1',\n}\n\nexport const ChromeDark = {\n  primary: '#333639',\n  primaryDark: '#292c2f',\n  background: '#202124',\n  accent: '#fff',\n  textPrimary: '#f1f3f4',\n  textSecondary: '#9ba0a5',\n}\n","import {Black, Dark, White, Light, ChromeDark} from './themes'\n\nexport default function getTheme(theme) {\n  if (theme === undefined) return Light\n  switch (theme.toLowerCase()) {\n    case 'light':\n      return Light\n    case 'dark':\n      return Dark\n    case 'white':\n      return White\n    case 'black':\n      return Black\n    case 'chrome-dark':\n      return ChromeDark\n    default:\n      return Light\n  }\n}\n","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  box-sizing: border-box;\n  height: 64px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 48px 16px;\n`\n\nconst Title = styled.h1`\n  padding: 0;\n  margin: 0;\n`\n\nexport default class AppHeader extends Component {\n  static propTypes = {\n    leftExtra: PropTypes.object,\n    rightExtra: PropTypes.object\n  }\n\n  render() {\n    const {title, leftExtra, rightExtra} = this.props\n    return (\n      <header style={{\n        width: '100%',\n        ...this.props.style\n      }}>\n        <Container>\n          {\n            leftExtra === undefined ? undefined :\n              <div style={{marginRight: 16,}}>\n                {leftExtra}\n              </div>\n          }\n          <Title>{title}</Title>\n          <div style={{flex: 1}}/>\n          {\n            rightExtra === undefined ? undefined :\n              <div style={{marginLeft: 16}}>\n                {rightExtra}\n              </div>\n          }\n        </Container>\n      </header>\n    )\n  }\n}\n","import React, {Component} from 'react'\nimport ShiftTextComponent from \"../components/ShiftTextComponent\"\nimport './HomePage.css'\nimport {Link} from \"react-router-dom\"\nimport {connect} from \"react-redux\"\nimport getTheme from \"../theme\"\nimport {defineMessages, injectIntl} from \"react-intl\"\nimport AppHeader from \"../components/AppHeader\"\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group'\nimport {MdSettings} from 'react-icons/md'\nimport styled from 'styled-components'\n\nconst Root = styled.div`\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  \n  @media (max-width: 768px) {\n    padding-top: 0;\n    padding-left: 0;\n    padding-right: 0;\n  }\n`\n\nclass HomePage extends Component {\n  state = {\n    idle: false\n  }\n\n  getSlogan = () => {\n    let slogan = ''\n    if (this.props.slogan === undefined\n      || this.props.slogan == null\n      || this.props.slogan.trim().length === 0) {\n      const messages = defineMessages({\n        defaultSlogan: {\n          id: 'slogan.default'\n        }\n      })\n      const {intl} = this.props\n      slogan = intl.formatMessage(messages.defaultSlogan)\n    } else {\n      slogan = this.props.slogan\n    }\n    return slogan.split('\\n')\n      .filter(item => item !== undefined && item != null)\n      .map(item => item.trim())\n      .filter(item => item.length > 0)\n  }\n\n  mouseCountdown = undefined\n\n  handleMouseMove = () => {\n    if (this.state.idle) {\n      this.setState({\n        idle: false\n      })\n    }\n    if (this.mouseCountdown !== undefined) {\n      window.clearTimeout(this.mouseCountdown)\n      this.mouseCountdown = undefined\n    }\n    this.mouseCountdown = window.setTimeout(\n      () => this.setState({\n        idle: true\n      }), 2000)\n  }\n\n  componentWillUnmount() {\n    if (this.mouseCountdown !== undefined) {\n      window.clearTimeout(this.mouseCountdown)\n      this.mouseCountdown = undefined\n    }\n  }\n\n  render() {\n    const {theme} = this.props\n    const palette = getTheme(theme)\n\n    const settingsIcon = (\n      <Link to={`/settings`}>\n        <h1><MdSettings\n          style={{\n            color: palette.textSecondary,\n            cursor: 'pointer',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          }}/></h1>\n      </Link>\n    )\n    return (\n      <Root style={{\n        background: palette.background,\n        cursor: this.state.idle ? 'none' : 'default'\n      }}\n            onMouseMove={this.handleMouseMove}>\n        <ReactCSSTransitionGroup\n          transitionLeaveTimeout={500}\n          transitionEnterTimeout={300}\n          transitionName=\"fade\">\n          {this.state.idle ? undefined :\n            <AppHeader\n              style={{position: 'absolute', top: 0,}}\n              rightExtra={settingsIcon}/>\n          }\n        </ReactCSSTransitionGroup>\n        <main style={{\n          boxSizing: 'border-box',\n          height: '100%',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }}>\n          <ShiftTextComponent\n            textAlign={'center'}\n            fontColor={palette.textPrimary}\n            fontSize={72}\n            slogan={this.getSlogan()}\n          />\n        </main>\n      </Root>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.settings.language,\n    theme: state.settings.theme,\n    slogan: state.settings.slogan\n  }\n}\n\nexport default connect(mapStateToProps)(injectIntl(HomePage))\n","export const UPDATE_LANGUAGE = \"UPDATE_LANGUAGE\"\n\nexport const UPDATE_THEME = \"UPDATE_THEME\"\n\nexport const UPDATE_SLOGAN = \"UPDATE_SLOGAN\"\n\nexport const UPDATE_INTERVAL = \"UPDATE_INTERVAL\"\n\nexport const UPDATE_FONT_SIZE = \"UPDATE_FONT_SIZE\"\n\nexport const UPDATE_FONT_ALIGN = \"UPDATE_FONT_ALIGN\"","import {\n  UPDATE_FONT_ALIGN,\n  UPDATE_FONT_SIZE,\n  UPDATE_INTERVAL,\n  UPDATE_LANGUAGE,\n  UPDATE_SLOGAN,\n  UPDATE_THEME\n} from \"../ActionTypes\"\n\nexport const updateLanguage = language => ({\n  type: UPDATE_LANGUAGE,\n  language\n})\n\nexport const updateTheme = theme => ({\n  type: UPDATE_THEME,\n  theme\n})\n\nexport const updateSlogan = slogan => ({\n  type: UPDATE_SLOGAN,\n  slogan\n})\n\nexport const updateInterval = interval => ({\n  type: UPDATE_INTERVAL,\n  interval\n})\n\nexport const updateFontSize = fontSize => ({\n  type: UPDATE_FONT_SIZE,\n  fontSize\n})\n\nexport const updateFontAlign = fontAlign => ({\n  type: UPDATE_FONT_ALIGN,\n  fontAlign\n})\n","export function hexToRgbA(hex, alpha) {\n  var c\n  if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n    c = hex.substring(1).split('')\n    if (c.length === 3) {\n      c = [c[0], c[0], c[1], c[1], c[2], c[2]]\n    }\n    c = '0x' + c.join('')\n    return 'rgba(' + [(c >> 16) & 255, (c >> 8) & 255, c & 255].join(',') + ',' + (alpha !== undefined ? alpha : 1) + ')'\n  }\n  throw new Error('Bad Hex')\n}\n","import React, {Component} from 'react'\nimport {FormattedMessage} from \"react-intl\"\nimport styled from 'styled-components'\n\nconst Title = styled.div`\n  padding: 16px 0;\n  font-weight: bold;\n  font-size: 1.5rem;\n`\n\nexport default class PreferenceGroup extends Component {\n  render() {\n    const {title, titleId, children} = this.props\n\n    if (titleId !== undefined) {\n      return (\n        <div>\n          <FormattedMessage id={titleId}>\n            {text => <Title>{text}</Title>}\n          </FormattedMessage>\n          <div>\n            {children}\n          </div>\n        </div>\n      )\n    }\n    return (\n      <div>\n        <Title>{title}</Title>\n        <div>\n          {children}\n        </div>\n      </div>\n    )\n  }\n}\n","import React, {Component} from 'react'\nimport getTheme from \"../theme\"\nimport {hexToRgbA} from \"../utils/colorUtil\"\nimport {FormattedMessage} from \"react-intl\"\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  padding: 16px 0;\n  margin-bottom: 16px;\n  border: 0 solid;\n  border-bottom-width: 1px;\n`\n\nexport default class PreferenceItem extends Component {\n  render() {\n    const {title, titleId, actionView} = this.props\n    let itemView = (\n      <div style={{display: 'flex'}}>\n        <div style={{flex: 1}}>\n          {\n            titleId ?\n              <FormattedMessage id={titleId}/> :\n              <span>{title}</span>\n          }\n        </div>\n        <div style={{flex: 2}}>\n          <div>{actionView}</div>\n        </div>\n      </div>\n    )\n\n    return (\n      <Container style={{\n        borderColor: hexToRgbA(getTheme(this.props.theme).textSecondary, 0.2)\n      }}>\n        {itemView}\n        {this.props.children}\n      </Container>\n    )\n  }\n}\n","import {Component} from \"react\"\nimport getTheme from \"../../theme\"\nimport PreferenceGroup from \"../../components/PerferenceGroup\"\nimport PreferenceItem from \"../../components/PreferenceItem\"\nimport {FormattedMessage} from \"react-intl\"\nimport React from \"react\"\n\nexport default class LanguageTab extends Component {\n  onSelect = (e) => {\n    this.props.updateLanguage(e.target.value)\n  }\n\n  render() {\n    const {theme} = this.props\n    const scheme = getTheme(theme)\n    return (\n      <PreferenceGroup titleId={'settings.language'}>\n        <PreferenceItem>\n          <select className={'setting-select'}\n                  style={{\n                    backgroundColor: scheme.primary,\n                    color: scheme.textPrimary\n                  }}\n                  value={this.props.language}\n                  onChange={this.onSelect}>\n            <FormattedMessage id={'settings.language.default'}>\n              {text => <option value=\"\">{text}</option>}\n            </FormattedMessage>\n            <option value=\"zh-Hans\">简体中文</option>\n            <option value=\"zh-Hant\">正體中文</option>\n            <option value=\"en-US\">English</option>\n          </select>\n        </PreferenceItem>\n      </PreferenceGroup>\n    )\n  }\n}\n","import {Component} from \"react\"\nimport {defineMessages, FormattedMessage} from \"react-intl\"\nimport autosize from \"autosize\"\nimport getTheme from \"../../theme\"\nimport PreferenceGroup from \"../../components/PerferenceGroup\"\nimport PreferenceItem from \"../../components/PreferenceItem\"\nimport {MdArrowDropDown, MdArrowDropUp} from \"react-icons/md\"\nimport ReactMarkdown from \"react-markdown\"\nimport ShiftTextComponent from \"../../components/ShiftTextComponent\"\nimport React from \"react\"\nimport styled from 'styled-components'\n\n\nexport default class SloganTab extends Component {\n  state = {\n    text: '',\n    showSyntax: false,\n    fontSize: 72,\n    interval: 2\n  }\n  messages = defineMessages({\n    saveSuccess: {\n      id: 'action.save.success'\n    }\n  })\n\n  componentDidMount() {\n    this.setSlogan()\n    this.setState({\n      interval: this.props.interval\n    })\n  }\n\n  setSlogan = () => {\n    if (this.props.slogan === undefined || this.props.slogan == null || this.props.slogan.trim().length === 0) {\n      const messages = defineMessages({\n        defaultSlogan: {\n          id: 'slogan.default'\n        }\n      })\n      const {intl} = this.props\n      this.setState({\n        text: intl.formatMessage(messages.defaultSlogan)\n      })\n    } else {\n      this.setState({\n        text: this.props.slogan\n      })\n    }\n  }\n\n  updateTextareaSize = () => {\n    const textarea = this.refs.textarea\n    autosize(textarea)\n  }\n\n  onTextChange = (e) => {\n    const text = e.target.value\n    if (text === undefined) this.setState({text: ''})\n    else {\n      this.setState({text: text})\n    }\n  }\n\n  onIntervalChange = (e) => {\n    const s = e.target.value\n    if (s === undefined) return\n    let k = 0\n    for (let i = 0; i < s.length; i++) {\n      if (s[i] >= '0' && s[i] <= '9') {\n        k = k * 10 + (s[i] - '0')\n      }\n    }\n    this.props.updateInterval(k)\n  }\n\n  onSave = () => {\n    this.props.updateSlogan(this.state.text)\n    alert(this.props.intl.formatMessage(this.messages.saveSuccess))\n    this.setSlogan()\n  }\n\n  onReset = () => {\n    this.props.updateSlogan('')\n    this.setSlogan()\n  }\n\n  validateNumberInput = (e) => {\n    let key\n    const theEvent = e || window.event\n\n    if (theEvent.type === 'paste') {\n      key = theEvent.clipboardData.getData('text/plain')\n    } else {\n      key = theEvent.keyCode || theEvent.which\n      key = String.fromCharCode(key)\n    }\n    const regex = /[0-9]|\\./\n    if (!regex.test(key)) {\n      theEvent.returnValue = false\n      if (theEvent.preventDefault) theEvent.preventDefault()\n    }\n  }\n\n  render() {\n    const {theme} = this.props\n    const scheme = getTheme(theme)\n    // 渲染好界面后更新输入框大小\n    window.requestAnimationFrame(() => this.updateTextareaSize())\n\n    const customTab = (\n      <PreferenceGroup titleId={\"settings.slogan.custom\"}>\n        <PreferenceItem>\n          <div>\n                        <textarea\n                          onChange={this.onTextChange}\n                          value={this.state.text}\n                          ref={\"textarea\"}\n                          onKeyUp={this.updateTextareaSize}\n                          className={'slogan-textarea'}\n                          spellCheck=\"false\"\n                          style={{\n                            backgroundColor: scheme.primary,\n                            color: scheme.textPrimary\n                          }}/>\n            <div style={{\n              paddingRight: 16,\n              paddingLeft: 16,\n              userSelect: 'none',\n              color: scheme.textSecondary,\n              fontSize: '0.8rem'\n            }}>\n              <div onClick={() => this.setState({showSyntax: !this.state.showSyntax})}\n                   style={{\n                     display: 'flex',\n                     alignItems: 'center'\n                   }}>\n                <FormattedMessage id={'settings.slogan.syntax'}/>\n                {\n                  this.state.showSyntax ?\n                    <MdArrowDropUp style={{\n                      verticalAlign: 'middle',\n                      marginLeft: 4,\n                      fontSize: '1rem'\n                    }}/>\n                    : <MdArrowDropDown style={{\n                      verticalAlign: 'middle',\n                      marginLeft: 4,\n                      fontSize: '1rem'\n                    }}/>\n                }\n              </div>\n              {this.state.showSyntax ?\n                <div>\n                  <FormattedMessage id={'settings.slogan.syntax.summary'}>\n                    {(text) => <ReactMarkdown\n                      renderers={{'paragraph': 'div'}}\n                      source={text}/>}\n                  </FormattedMessage>\n                </div> : undefined\n              }\n            </div>\n          </div>\n          <div style={{\n            width: '100%',\n            display: 'flex',\n            flexDirection: 'row',\n          }}>\n            <div style={{flex: 1}}/>\n            <div className={\"button-bar\"}>\n              <button onClick={this.onReset}\n                      style={{\n                        backgroundColor: scheme.primary,\n                        color: scheme.textPrimary\n                      }}>\n                <FormattedMessage id={'action.reset'}/>\n              </button>\n              <button onClick={this.onSave}\n                      style={{\n                        backgroundColor: scheme.primary,\n                        color: scheme.textPrimary\n                      }}>\n                <FormattedMessage id={'action.save'}/>\n              </button>\n            </div>\n          </div>\n        </PreferenceItem>\n      </PreferenceGroup>\n    )\n    const otherTab = <PreferenceGroup title={\"其他设置\"}>\n      <PreferenceItem\n        title={\"时间间隔\"}\n        iconName={'stopwatch'}\n        actionView={\n          <div>\n            <input\n              className={'setting-input'}\n              value={this.props.interval}\n              onKeyPress={this.validateNumberInput}\n              style={{\n                borderColor: scheme.textSecondary,\n                color: scheme.textPrimary,\n                backgroundColor: scheme.primary,\n                width: '3rem',\n                textAlign: 'center',\n                marginRight: 8,\n              }}\n              onChange={this.onIntervalChange}/>\n            <span>秒</span>\n          </div>\n        }/>\n      <PreferenceItem title={\"字体大小\"} iconName={'font'}/>\n      <PreferenceItem title={\"文本对齐\"} iconName={'align-center'} actionView={\n        <div>\n          <div style={{display: 'inline-block'}}>\n            <input type=\"radio\" id=\"left\" value=\"left\"/>\n            <span>Left</span>\n          </div>\n          <div style={{display: 'inline-block'}}>\n            <input type=\"radio\" id=\"center\" value=\"center\"/>\n            <span>Center</span>\n          </div>\n          <div style={{display: 'inline-block'}}>\n            <input type=\"radio\" id=\"right\" value=\"right\"/>\n            <span>Right</span>\n          </div>\n        </div>\n      }/>\n    </PreferenceGroup>\n    const previewTab = <PreferenceGroup title={'效果预览'}>\n      <PreferenceItem>\n        <div style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          width: '100%',\n          minHeight: 5 * this.state.fontSize\n        }}>\n          <ShiftTextComponent\n            textAlign={'center'}\n            fontColor={scheme.textPrimary}\n            fontSize={this.state.fontSize}\n            interval={this.state.interval}\n            slogan={this.state.text.split('\\n')}/>\n        </div>\n      </PreferenceItem>\n    </PreferenceGroup>\n\n    return (\n      <div>\n        {customTab}\n      </div>\n    )\n  }\n}\n","import {Component} from \"react\"\nimport getTheme from \"../../theme\"\nimport {hexToRgbA} from \"../../utils/colorUtil\"\nimport {FormattedMessage} from \"react-intl\"\nimport PreferenceGroup from \"../../components/PerferenceGroup\"\nimport PreferenceItem from \"../../components/PreferenceItem\"\nimport React from \"react\"\nimport styled from 'styled-components'\n\nconst ThemeBlockContainer = styled.div`\n  margin: 8px;\n  display: inline-block;\n  border: 1px solid;\n  border-radius: 8px;\n  padding: 16px 16px 14px;\n  user-select: none;\n  cursor: pointer;\n  font-size: 1rem;\n`\n\nconst ThemeBlockSelection = styled.div`\n  height: 2px;\n  margin-top: 2px;\n  border-width: 0;\n  border-radius: 2px;\n`\n\nexport default class AppearanceTab extends Component {\n\n  onThemeSelect = (theme) => {\n    this.props.updateTheme(theme)\n  }\n\n  render() {\n    const {theme, updateTheme} = this.props\n    if (theme === undefined) {\n      updateTheme('light')\n    }\n    const scheme = getTheme(theme)\n    const ThemeBlock = ({titleId, value}) => {\n      return (\n        <ThemeBlockContainer\n          onClick={() => this.onThemeSelect(value)}\n          style={{\n            borderColor: hexToRgbA(scheme.textSecondary, 0.2),\n            color: getTheme(value).textPrimary,\n            backgroundColor: getTheme(value).background,\n          }}>\n          <FormattedMessage id={titleId}/>\n          <ThemeBlockSelection style={{\n            backgroundColor: value === theme ? scheme.accent : 'transparent'\n          }}/>\n        </ThemeBlockContainer>\n      )\n    }\n\n    return (\n      <div>\n        <FormattedMessage id={'settings.appearance.theme'}>\n          {text =>\n            <PreferenceGroup title={text}>\n              <PreferenceItem>\n                <div style={{width: '100%'}}>\n                  <ThemeBlock\n                    value={'white'}\n                    titleId={'settings.appearance.theme.white'}/>\n                  <ThemeBlock\n                    value={'light'}\n                    titleId={'settings.appearance.theme.light'}/>\n                  <ThemeBlock\n                    value={'dark'}\n                    titleId={'settings.appearance.theme.dark'}/>\n                  <ThemeBlock\n                    value={'black'}\n                    titleId={'settings.appearance.theme.black'}/>\n                  <ThemeBlock\n                    value={'chrome-dark'}\n                    titleId={'settings.appearance.theme.chrome-dark'}/>\n                </div>\n              </PreferenceItem>\n            </PreferenceGroup>\n          }\n        </FormattedMessage>\n      </div>\n    )\n  }\n}\n","import {Component} from \"react\"\nimport {FormattedMessage} from \"react-intl\"\nimport PreferenceGroup from \"../../components/PerferenceGroup\"\nimport PreferenceItem from \"../../components/PreferenceItem\"\nimport React from \"react\"\n\nexport default class ApplicationTab extends Component {\n  state = {\n    deferredPrompt: undefined\n  }\n\n  constructor(props) {\n    super(props)\n    window.addEventListener('beforeinstallprompt', (e) => {\n      // Prevent Chrome 67 and earlier from automatically showing the prompt\n      e.preventDefault()\n      // Stash the event so it can be triggered later.\n      this.setState({\n        deferredPrompt: e\n      })\n    })\n  }\n\n  onAddPwa = () => {\n    this.setState.deferredPrompt.prompt()\n    // Wait for the user to respond to the prompt\n    this.setState.deferredPrompt.userChoice.then((choiceResult) => {\n      if (choiceResult.outcome === 'accepted') {\n        console.log('User accepted the A2HS prompt')\n      } else {\n        console.log('User dismissed the A2HS prompt')\n      }\n    })\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"settings.application\">\n        {(title) => (\n          <PreferenceGroup title={title}>\n            <PreferenceItem\n              title={'PWA'}\n              actionView={\n                <button onClick={this.onAddPwa}>添加</button>\n              }>\n            </PreferenceItem>\n            <PreferenceItem>\n              <div style={{display: 'flex', flexDirection: 'row'}}>\n                <div>Chrome 扩展</div>\n                <div><a>Download</a></div>\n              </div>\n            </PreferenceItem>\n          </PreferenceGroup>\n        )}\n      </FormattedMessage>\n    )\n  }\n}\n","import {Component} from \"react\"\nimport getTheme from \"../../theme/index\"\nimport {FormattedMessage} from \"react-intl\"\nimport PreferenceGroup from \"../../components/PerferenceGroup\"\nimport PreferenceItem from \"../../components/PreferenceItem\"\nimport packageJson from \"../../../package.json\"\nimport React from \"react\"\n\nexport default class AboutTab extends Component {\n  render() {\n    const {theme} = this.props\n    const scheme = getTheme(theme)\n    const about = <FormattedMessage id={'settings.about'}>\n      {text =>\n        <PreferenceGroup title={text}>\n          <PreferenceItem>\n            <div><span role={'img'} aria-label={'logo'}>💼</span> Version {packageJson.version}</div>\n          </PreferenceItem>\n          <PreferenceItem>\n            <div>\n              <a href={'https://github.com/sorcererXW/iloveworks'}\n                 target={'_blank'}\n                 style={{\n                   fontWeight: '600',\n                   color: scheme.accent\n                 }}>\n                Github\n              </a>\n            </div>\n          </PreferenceItem>\n          <PreferenceItem>\n            <div>\n              <a href={'https://github.com/sorcererXW/iloveworks/releases'}\n                 target={'_blank'}\n                 style={{\n                   fontWeight: '600',\n                   color: scheme.accent\n                 }}>\n                <FormattedMessage id={'settings.about.release_note'}/>\n              </a>\n            </div>\n          </PreferenceItem>\n        </PreferenceGroup>\n      }\n    </FormattedMessage>\n\n    return (\n      <div>\n        {about}\n      </div>\n    )\n  }\n}\n","import React, {Component} from 'react'\nimport './SettingsPage.css'\nimport {Link, Route, Switch, NavLink, Redirect} from \"react-router-dom\"\nimport {FormattedMessage, injectIntl} from \"react-intl\"\nimport {connect} from \"react-redux\"\nimport {updateLanguage, updateTheme, updateSlogan, updateInterval} from \"../redux/actions/SettingsAcrion\"\nimport getTheme from '../theme'\nimport {hexToRgbA} from '../utils/colorUtil'\nimport {Helmet} from \"react-helmet\"\nimport AppHeader from \"../components/AppHeader\"\nimport Responsive from 'react-responsive'\nimport {MdClose, MdMoreVert} from 'react-icons/md'\nimport LanguageTab from \"./tabs/LanguageTab\"\nimport SloganTab from \"./tabs/SloganTab\"\nimport AppearanceTab from \"./tabs/AppearanceTab\"\nimport ApplicationTab from \"./tabs/ApplicationTab\"\nimport AboutTab from \"./tabs/AboutTab\"\nimport styled from 'styled-components'\n\nconst Mobile = props => <Responsive {...props} maxWidth={425}/>\nconst Tablet = props => <Responsive {...props} minWidth={426} maxWidth={768}/>\nconst Default = props => <Responsive {...props} minWidth={769}/>\n\nconst Root = styled.div`\n  min-height: 100vh;\n  box-sizing: border-box;\n`\n\nconst Sider = styled.div`\n  padding: 16px;\n  border: 0 solid;\n  border-right-width: 1px;\n  height: 100%;\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n  \n  .selected {\n    border-radius: 8px;\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n  \n  @media (max-width: 768px) {\n    box-sizing: border-box;\n    border-right-width: 0;\n    flex-direction: row;\n    width: 100%;\n    height: auto;\n    overflow: auto;\n\n    ::-webkit-scrollbar {\n        width: 0 !important;\n    }\n  }\n`\n\nconst NavItem = styled.div`\n  text-decoration: none;\n  padding: 8px 32px 8px 16px;\n  margin-bottom: 16px;\n  margin-right: 8px;\n  font-size: 1rem;\n  white-space: pre;\n  font-weight: 500;\n  \n  :hover {\n    border-radius: 8px;\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n  \n  @media (max-width: 768px) {\n    padding: 8px 16px 8px 16px;\n    margin-right: 8px;\n  }\n`\n\nconst ContentContainer = styled.div`\n  width: 100%;\n  padding: 0 16px;\n  display: flex;\n  box-sizing: border-box;\n  flex-direction: column;\n`\n\nclass SettingsPage extends Component {\n  state = {\n    showMenu: true,\n  }\n\n  render() {\n    const {match, theme} = this.props\n    const palette = getTheme(theme)\n\n    const meta = (\n      <FormattedMessage id=\"settings\">\n        {name =>\n          <Helmet>\n            <title>{name}</title>\n          </Helmet>\n        }\n      </FormattedMessage>\n    )\n\n    const content = (\n      <ContentContainer>\n        <Switch>\n          <Route exact path={`${match.url}/slogan`}\n                 component={connect(mapStateToProps, mapDispatchToProps)(injectIntl(SloganTab))}/>\n          <Route exact path={`${match.url}/language`}\n                 component={connect(mapStateToProps, mapDispatchToProps)(LanguageTab)}/>\n          <Route exact path={`${match.url}/appearance`}\n                 component={connect(mapStateToProps, mapDispatchToProps)(AppearanceTab)}/>\n          <Route exact path={`${match.url}/application`}\n                 component={connect(mapStateToProps, mapDispatchToProps)(ApplicationTab)}/>\n          <Route exact path={`${match.url}/about`}\n                 component={connect(mapStateToProps, mapDispatchToProps)(AboutTab)}/>\n          <Route render={() => <Redirect to={`${match.url}/appearance`}/>}/>\n        </Switch>\n      </ContentContainer>\n    )\n\n    const links = ['appearance', 'slogan', 'language', 'about']\n\n    const closeIcon = (\n      <Link to={`/`}>\n        <MdClose style={{\n          color: palette.textPrimary,\n          fontSize: '2em',\n          verticalAlign: 'middle'\n        }}/>\n      </Link>\n    )\n\n    const moreIcon = (\n      <MdMoreVert\n        style={{\n          color: palette.textPrimary,\n          fontSize: '2em',\n          verticalAlign: 'middle'\n        }}\n        onClick={() => this.setState({showMenu: !this.state.showMenu})}/>\n    )\n\n    return (\n      <Root style={{\n        backgroundColor: palette.background,\n        color: palette.textPrimary\n      }}>\n        {meta}\n        <FormattedMessage id=\"settings\">\n          {title => [\n            <Default key={0}><AppHeader title={title} rightExtra={closeIcon}/></Default>,\n            <Tablet key={1}><AppHeader title={title} leftExtra={closeIcon}/></Tablet>,\n            <Mobile key={2}><AppHeader title={title} leftExtra={closeIcon} rightExtra={moreIcon}/></Mobile>,\n          ]}\n        </FormattedMessage>\n        <Default>\n          <main style={{\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'row'\n          }}>\n            <Sider\n              style={{\n                borderColor: hexToRgbA(palette.textSecondary, 0.2),\n              }}>\n              {\n                links.map((link, key) => (\n                  <NavLink\n                    key={key}\n                    activeClassName={'selected'}\n                    activeStyle={{color: palette.textPrimary}}\n                    style={{color: palette.textSecondary}}\n                    to={`${match.url}/${link}`}>\n                    <NavItem>\n                      <FormattedMessage id={`settings.${link}`}/>\n                    </NavItem>\n                  </NavLink>\n                ))\n              }\n            </Sider>\n            {content}\n          </main>\n        </Default>\n        <Tablet>\n          <main style={{\n            width: '100%',\n            display: 'flex',\n            flexDirection: 'column'\n          }}>\n            <Sider\n              style={{\n                borderColor: hexToRgbA(palette.textSecondary, 0.2),\n              }}>\n              {\n                links.map((link, key) => (\n                  <NavLink\n                    key={key}\n                    activeClassName={'selected'}\n                    activeStyle={{color: palette.textPrimary}}\n                    style={{color: palette.textSecondary}}\n                    to={`${match.url}/${link}`}>\n                    <NavItem>\n                      <FormattedMessage id={`settings.${link}`}/>\n                    </NavItem>\n                  </NavLink>\n                ))\n              }\n            </Sider>\n            {content}\n          </main>\n        </Tablet>\n        <Mobile>\n          <main style={{\n            width: '100%',\n            display: 'flex',\n            flexDirection: 'column'\n          }}>\n            {\n              this.state.showMenu ?\n                <Sider\n                  style={{\n                    borderColor: hexToRgbA(palette.textSecondary, 0.2),\n                    width: '100%',\n                    display: 'flex',\n                    flexDirection: 'column'\n                  }}>\n                  {\n                    links.map((link, key) => (\n                      <NavLink\n                        key={key}\n                        activeClassName={'selected'}\n                        activeStyle={{color: palette.textPrimary}}\n                        style={{color: palette.textSecondary}}\n                        to={`${match.url}/${link}`}>\n                        <NavItem>\n                          <FormattedMessage id={`settings.${link}`}/>\n                        </NavItem>\n                      </NavLink>\n                    ))\n                  }\n                </Sider> : undefined\n            }\n            {content}\n          </main>\n        </Mobile>\n      </Root>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.settings.language,\n    theme: state.settings.theme,\n    slogan: state.settings.slogan,\n    interval: state.settings.interval\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateLanguage: language => dispatch(updateLanguage(language)),\n  updateTheme: theme => dispatch(updateTheme(theme)),\n  updateSlogan: slogan => dispatch(updateSlogan(slogan)),\n  updateInterval: interval => dispatch(updateInterval(interval))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsPage)\n","export default {\n  'appName': '我爱工作',\n\n  'slogan.default': \"\"\n    + \"**优秀**|是一种习惯\\n\"\n    + \"**优秀**|是与生俱来的天赋\\n\"\n    + \"**我爱工作**\\n\"\n    + \"工作使我快乐\\n\"\n    + \"我徜徉在工作的海洋里\\n\"\n    + \"上司叫我吃饭|我充耳不闻\\n\"\n    + \"同事喊我喝水|我无动于衷\\n\"\n    + \"老板喊我睡觉|我百般推辞\",\n\n  'action.ok': '好的',\n  'action.save': '保存',\n  'action.save.success': '保存成功',\n  'action.cancel': '取消',\n  'action.reset': '重置',\n\n  'settings': '设置',\n  'settings.application': '应用程序',\n  'settings.appearance': '界面',\n  'settings.language': '语言',\n  'settings.language.default': '跟随系统',\n  'settings.about': '关于',\n  'settings.slogan': '标语',\n  'settings.slogan.syntax': '语法说明',\n  'settings.slogan.syntax.summary': '一行语句为一段，使用 | 进行段内分行\\n\\n'\n    + '另外支持使用部分简单的 Markdown 语法：\\n\\n'\n    + '`**加粗**` ⇨ **加粗**\\n\\n'\n    + '`*斜体*` ⇨ *斜体*\\n\\n'\n    + '`~~删除~~` ⇨ ~~删除~~',\n  'settings.slogan.custom': '自定义标语',\n  'settings.slogan.interval': '时间间隔',\n  'settings.about.release_note': '更新日志',\n  'settings.appearance.theme': '主题',\n  'settings.appearance.theme.white': '白 色',\n  'settings.appearance.theme.black': '黑 色',\n  'settings.appearance.theme.light': '亮 色',\n  'settings.appearance.theme.dark': '暗 色',\n  'settings.appearance.theme.chrome-dark': 'Chrome(暗)',\n}\n","export default {\n  'appName': '我愛工作',\n\n  'slogan.default': \"\"\n    + \"**優秀**|是一種習慣\\n\"\n    + \"**優秀**|是與生俱來的天賦\\n\"\n    + \"**我愛工作**\\n\"\n    + \"工作使我快樂\\n\"\n    + \"我徜徉在工作的海洋裡\\n\"\n    + \"上司叫我吃飯|我充耳不聞\\n\"\n    + \"同事喊我喝水|我無動於衷\\n\"\n    + \"老闆喊我睡覺|我百般推辭\",\n\n  'action.ok': '好的',\n  'action.save': '保存',\n  'action.save.success': '保存成功',\n  'action.cancel': '取消',\n  'action.reset': '重置',\n\n  'settings': '設置',\n  'settings.application': '應用程序',\n  'settings.appearance': '界面',\n  'settings.language': '語言',\n  'settings.language.default': '跟隨系統',\n  'settings.about': '關於',\n  'settings.slogan': '標語',\n  'settings.slogan.syntax': '語法說明',\n  'settings.slogan.syntax.summary': '一行語句為一段，使用 | 進行段內分行\\n\\n'\n    + '另外支持使用部分簡單的 Markdown 語法：\\n\\n'\n    + '`**加粗**` ⇨ **加粗**\\n\\n'\n    + '`*斜體*` ⇨ *斜體*\\n\\n'\n    + '`~~刪除~~` ⇨ ~~刪除~~',\n  'settings.slogan.custom': '自定義標語',\n  'settings.slogan.interval': '時間間隔',\n  'settings.about.release_note': '更新日誌',\n  'settings.appearance.theme': '主題',\n  'settings.appearance.theme.white': '白 色',\n  'settings.appearance.theme.black': '黑 色',\n  'settings.appearance.theme.light': '亮 色',\n  'settings.appearance.theme.dark': '暗 色',\n  'settings.appearance.theme.chrome-dark': 'Chrome(暗)',\n}\n","export default {\n  'appName': 'I ❤ Works',\n\n  'slogan.default': \"\"\n    + \"**Excellent**| is a habit\\n\"\n    + \"**Excellent**| is a gift\\n\"\n    + \"**I love working**\\n\"\n    + \"Working makes me happy\\n\"\n    + \"I am in the ocean of work\\n\"\n    + \"Boss told me to have lunch | I turn a deaf ear\\n\"\n    + \"Colleagues call me to drink | I am indifferent\\n\"\n    + \"Manager call me to sleep | I refuse strongly\",\n\n  'action.ok': 'OK',\n  'action.save': 'Save',\n  'action.save.success': 'Saved successfully',\n  'action.cancel': 'Cancel',\n  'action.reset': 'Reset',\n\n  'settings': 'Settings',\n  'settings.application': 'Application',\n  'settings.appearance': 'Appearance',\n  'settings.language': 'Language',\n  'settings.language.default': 'Default',\n  'settings.about': 'About',\n  'settings.slogan': 'Slogan',\n  'settings.slogan.syntax': 'Syntax description',\n  'settings.slogan.syntax.summary': 'One line statement is a paragraph, use \\'|\\' to perform line break \\n\\n'\n    + 'And you can use some basic Markdown inline syntax: \\n\\n'\n    + '`**Bold**` ⇨ **Bold**\\n\\n'\n    + '`*Italic*` ⇨ *Italic*\\n\\n'\n    + '`~~Delete~~` ⇨ ~~Delete~~',\n  'settings.slogan.custom': 'Custom slogan',\n  'settings.slogan.interval': 'Interval',\n  'settings.about.release_note': 'Release Notes',\n  'settings.appearance.theme': 'Theme',\n  'settings.appearance.theme.white': 'White',\n  'settings.appearance.theme.black': 'Black',\n  'settings.appearance.theme.light': 'Light',\n  'settings.appearance.theme.dark': 'Dark',\n  'settings.appearance.theme.chrome-dark': 'Chrome Dark',\n}\n","import zhHans from \"./zh-Hans\"\nimport zhHant from \"./zh-Hant\"\nimport enUS from \"./en-US\"\n\nexport function mergeLanguage(...languages) {\n  const output = {}\n  for (let lang of languages) {\n    for (let key in lang) {\n      output[key + ''] = lang[key + '']\n    }\n  }\n  return output\n}\n\nexport function getLocale(language) {\n  let target = undefined\n  if (language !== undefined && language != null && language.length > 0) {\n    target = language\n  } else {\n    console.log(navigator.userLanguage)\n    console.log(navigator.language)\n    target = navigator.userLanguage || navigator.language\n  }\n  let result = {}\n  switch (target) {\n    case 'zh-Hans':\n    case 'zh-CN':\n      result = zhHans\n      break\n    case 'zh-HK':\n    case 'zh-TW':\n    case 'zh-MO':\n    case 'zh-SG':\n    case 'zh-Hant':\n      result = mergeLanguage(zhHans, zhHant)\n      break\n    default:\n      result = enUS\n  }\n  return mergeLanguage(enUS, result)\n}\n","import React, {Component} from 'react'\n\nimport {BrowserRouter, Redirect, Route, Switch} from 'react-router-dom'\n\nimport HomePage from \"./containers/HomePage\"\nimport SettingsPage from \"./containers/SettingsPage\"\n\nimport {connect} from 'react-redux'\n\nimport {getLocale} from './locale'\n\nimport {addLocaleData, FormattedMessage, IntlProvider} from \"react-intl\"\nimport zh from 'react-intl/locale-data/zh'\nimport en from 'react-intl/locale-data/en'\n\nimport {Helmet} from \"react-helmet\"\n\nimport getTheme from \"./theme\"\n\naddLocaleData([...en, ...zh])\n\nclass App extends Component {\n  render() {\n    const meta = (\n      <FormattedMessage id={\"appName\"}>\n        {appName =>\n          <Helmet>\n            <meta charSet=\"utf-8\"/>\n            <title>{appName}</title>\n            <meta name=\"theme-color\" content={scheme.background}/>\n          </Helmet>\n        }\n      </FormattedMessage>\n    )\n\n    const route = (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path={`/`} component={HomePage}/>\n          <Route path={`/settings`} component={SettingsPage}/>\n          <Route render={() => <Redirect to={`/`}/>}/>\n        </Switch>\n      </BrowserRouter>\n    )\n\n    const {theme} = this.props\n    const scheme = getTheme(theme)\n    return (\n      <IntlProvider locale={navigator.language} messages={getLocale(this.props.language)}>\n        <div>\n          {meta}\n          {route}\n        </div>\n      </IntlProvider>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.settings.language,\n    theme: state.settings.theme\n  }\n}\n\nexport default connect(mapStateToProps, null)(App)\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n)\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import * as types from '../ActionTypes'\n\nconst initialState = {}\n\nexport default function SettingsReducer(state = initialState, action) {\n  switch (action.type) {\n    case types.UPDATE_LANGUAGE:\n      return {\n        ...state,\n        language: action.language\n      }\n    case types.UPDATE_THEME:\n      return {\n        ...state,\n        theme: action.theme\n      }\n    case types.UPDATE_SLOGAN:\n      return {\n        ...state,\n        slogan: action.slogan\n      }\n    case types.UPDATE_FONT_SIZE:\n      return {\n        ...state,\n        fontSize: action.fontSize\n      }\n    case types.UPDATE_FONT_ALIGN:\n      return {\n        ...state,\n        fontAlign: action.fontAlign\n      }\n    case types.UPDATE_INTERVAL:\n      return {\n        ...state,\n        interval: action.interval\n      }\n    default:\n      return state\n  }\n}\n","import {combineReducers} from 'redux'\n\nimport SettingsReducer from './SettingsReducer'\n\nconst rootReducer = combineReducers({\n  settings: SettingsReducer\n})\n\nexport default rootReducer\n","import {applyMiddleware, createStore} from 'redux'\nimport * as actionCreators from './actions/SettingsAcrion'\nimport logger from 'redux-logger'\nimport {persistReducer} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport rootReducer from './reducers/index'\n\nconst middlewares = [logger]\nconst createStoreWithMiddleware = applyMiddleware(...middlewares)(createStore)\n\nconst enhancer = window.__REDUX_DEVTOOLS_EXTENSION__ &&\n  window.__REDUX_DEVTOOLS_EXTENSION__({actionCreators})\n\nconst persistConfig = {\n  key: 'root',\n  storage\n}\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst defaultState = {}\n\nexport default function configureStore() {\n  return createStoreWithMiddleware(persistedReducer, defaultState, enhancer)\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport registerServiceWorker from './utils/registerServiceWorker'\nimport configureStore from \"./redux/configureStore\"\nimport {Provider} from \"react-redux\"\nimport {PersistGate} from 'redux-persist/integration/react'\nimport {persistStore} from \"redux-persist\"\n\nconst store = configureStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistStore(store)}>\n      <App/>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'))\n\nregisterServiceWorker()\n"],"sourceRoot":""}